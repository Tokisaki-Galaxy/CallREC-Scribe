<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net8.0-android;net8.0-maccatalyst</TargetFrameworks>
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net8.0-windows10.0.19041.0</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net8.0-tizen</TargetFrameworks> -->

		<!-- Note for MacCatalyst:
		The default runtime is maccatalyst-x64, except in Release config, in which case the default is maccatalyst-x64;maccatalyst-arm64.
		When specifying both architectures, use the plural <RuntimeIdentifiers> instead of the singular <RuntimeIdentifier>.
		The Mac App Store will NOT accept apps with ONLY maccatalyst-arm64 indicated;
		either BOTH runtimes must be indicated or ONLY macatalyst-x64. -->
		<!-- For example: <RuntimeIdentifiers>maccatalyst-x64;maccatalyst-arm64</RuntimeIdentifiers> -->

		<OutputType>Exe</OutputType>
		<RootNamespace>CallREC_Scribe</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>
		<Nullable>enable</Nullable>

		<!-- Display name -->
		<ApplicationTitle>CallREC-Scribe</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.companyname.callrecscribe</ApplicationId>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
		<GenerateAppInstallerFile>False</GenerateAppInstallerFile>
		<AppxPackageSigningEnabled>False</AppxPackageSigningEnabled>
		<AppxPackageSigningTimestampDigestAlgorithm>SHA256</AppxPackageSigningTimestampDigestAlgorithm>
		<AppxAutoIncrementPackageRevision>False</AppxAutoIncrementPackageRevision>
		<AppxSymbolPackageEnabled>False</AppxSymbolPackageEnabled>
		<GenerateTestArtifacts>False</GenerateTestArtifacts>
		<HoursBetweenUpdateChecks>0</HoursBetweenUpdateChecks>
		<GenerateTemporaryStoreCertificate>True</GenerateTemporaryStoreCertificate>
		<DefaultLanguage>zh</DefaultLanguage>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net8.0-android|AnyCPU'">
    <PublishTrimmed>false</PublishTrimmed>
    <TrimMode>link</TrimMode>
	<RunAOTCompilation>false</RunAOTCompilation>
	<DebugSymbols>false</DebugSymbols>
    <DebugType>None</DebugType>
    <AndroidSupportedAbis>armeabi-v7a;arm64-v8a</AndroidSupportedAbis>
	<AndroidPackageFormat>apk</AndroidPackageFormat>
    <AndroidCreatePackagePerAbi>false</AndroidCreatePackagePerAbi>
    <AndroidEnableS8S>true</AndroidEnableS8S>
<ApplicationId>com.tokisaki.callrecscribe</ApplicationId>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net8.0-android|AnyCPU'">
	  <ApplicationId>com.tokisaki.callrecscribe</ApplicationId>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net8.0-maccatalyst|AnyCPU'">
	  <ApplicationId>com.tokisaki.callrecscribe</ApplicationId>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net8.0-windows10.0.19041.0|AnyCPU'">
	  <ApplicationId>com.tokisaki.callrecscribe</ApplicationId>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net8.0-maccatalyst|AnyCPU'">
	  <ApplicationId>com.tokisaki.callrecscribe</ApplicationId>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net8.0-windows10.0.19041.0|AnyCPU'">
	<WindowsAppSDKSelfContained>true</WindowsAppSDKSelfContained>
	<!--<PublishTrimmed>false</PublishTrimmed>
    <TrimMode>copyused</TrimMode>
	<RunAOTCompilation>false</RunAOTCompilation>
	<WindowsPackageType>None</WindowsPackageType>
    <PublishSingleFile>false</PublishSingleFile>
    <EnableCompressionInSingleFile>true</EnableCompressionInSingleFile>-->
    <SelfContained>true</SelfContained>
    <RuntimeIdentifier>win-x64</RuntimeIdentifier>
    <ApplicationId>com.tokisaki.callrecscribe</ApplicationId>
	</PropertyGroup>

	<ItemGroup>
		<!-- App Icon -->
		<!--<MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#512BD4" />-->
		<MauiIcon Include="Resources\AppIcon\ico.png" />

		<!-- Splash Screen -->
		<!--<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />-->
		<MauiSplashScreen Include="Resources\AppIcon\ico.png" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />

		<!-- Custom Fonts -->
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="ClosedXML" Version="0.105.0" />
		<PackageReference Include="CommunityToolkit.Maui" Version="9.1.1" />
		<PackageReference Include="CommunityToolkit.Mvvm" Version="8.4.0" />
		<PackageReference Include="Concentus" Version="2.2.2" />
		<PackageReference Include="Concentus.Oggfile" Version="1.0.6" />
		<PackageReference Include="DocX" Version="4.0.25105.5786" />
		<PackageReference Include="Microsoft.Maui.Controls" Version="$(MauiVersion)" />
		<PackageReference Include="Microsoft.Maui.Controls.Compatibility" Version="$(MauiVersion)" />
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="8.0.1" />
		<PackageReference Include="NAudio" Version="2.2.1" />
		<PackageReference Include="NAudio.Lame" Version="2.1.0" />
		<PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
		<PackageReference Include="sqlite-net-pcl" Version="1.9.172" />
	</ItemGroup>

	<ItemGroup>
	  <Compile Update="Resources\Strings\AppResources.Designer.cs">
	    <DesignTime>True</DesignTime>
	    <AutoGen>True</AutoGen>
	    <DependentUpon>AppResources.resx</DependentUpon>
	  </Compile>
	</ItemGroup>

	<ItemGroup>
	  <EmbeddedResource Update="Resources\Strings\AppResources.resx">
	    <Generator>ResXFileCodeGenerator</Generator>
	    <LastGenOutput>AppResources.Designer.cs</LastGenOutput>
	  </EmbeddedResource>
	</ItemGroup>

	<ItemGroup>
	  <MauiXaml Update="Views\ApiConfigPopup.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	  <MauiXaml Update="Views\ParsingConfigPopup.xaml">
	    <Generator>MSBuild:Compile</Generator>
	  </MauiXaml>
	</ItemGroup>

</Project>
